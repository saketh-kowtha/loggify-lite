# This workflow will run tests using node and then publish a frontend browser-based package to NPM when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Loggify-lite

on:
  push:
    branches:
      - release

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: Clean install dependencies
        run: npm install

      - name: Test the code
        run: npm run test

      - name: Run Security Audit
        run: npm audit --audit-level=high

      - name: Build browser package
        run: npm run build

      - name: Set up Git user for commit
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.event.pusher.email || 'hudson@no-email.com' }}"  # Fallback email if pusher.email is not available
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Check for commit message keywords (feature or breaking-change)
        id: version-bump
        run: |
          # Check if the commit messages contain 'feature:' or 'BREAKING CHANGE:'
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MESSAGE" =~ ^feat: ]]; then
            echo "Bumping minor version (feature)"
            echo "::set-output name=bump::minor"
          elif [[ "$COMMIT_MESSAGE" =~ "BREAKING CHANGE:" ]]; then
            echo "Bumping major version (breaking change)"
            echo "::set-output name=bump::major"
          else
            echo "Bumping patch version (fix)"
            echo "::set-output name=bump::patch"
          fi

      - name: Bump version based on condition
        run: |
          VERSION_BUMP="${{ steps.version-bump.outputs.bump }}"
          echo "Bumping version to $VERSION_BUMP"
          npm version $VERSION_BUMP -m "chore: bump version to %s"

      - name: Commit changes
        run: |
          git add .
          git commit -m "Automated commit from GitHub Actions"
        continue-on-error: true # In case there's nothing to commit, it won't break the workflow

      - name: Push changes
        run: |
          git push origin release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Check if version is already published
        id: check_version
        run: |
          PACKAGE_NAME=$(jq -r .name package.json)
          PACKAGE_VERSION=$(jq -r .version package.json)
          NPM_VERSIONS=$(npm view "$PACKAGE_NAME" versions --json || echo "[]")

          if echo "$NPM_VERSIONS" | jq -e ". | index(\"$PACKAGE_VERSION\")" >/dev/null; then
            echo "Version $PACKAGE_VERSION is already published."
            echo "skip_publish=true" >> $GITHUB_ENV
          else
            echo "Publishing version $PACKAGE_VERSION..."
            echo "skip_publish=false" >> $GITHUB_ENV
            git tag $PACKAGE_VERSION -m "Release version $PACKAGE_VERSION"
            git push origin $PACKAGE_VERSION
          fi

      - name: Generate Docs
        run: npm run docs

      # - name: Deploy to GitHub Pages
      #   run: npm run docs:deploy

      - name: Check bundle size
        run: |
          ls -lh dist/
          gzip -9 < dist/index.js | wc -c

      - name: Publish to npm
        if: env.skip_publish == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Success message
        if: env.skip_publish == 'false'
        run: echo "âœ… Package published successfully!"
